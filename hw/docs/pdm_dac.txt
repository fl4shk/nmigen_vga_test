PDM:  Make an accumulator of samples that's the same width as your samples.
Use the carry out of the adder as the PDM output.

Filter:  low pass of some sort


<emeb> then on the output pick R & C so the corner is at or below nyquist of the sample rate.
<emeb> for my system the sample rate is << clock rate

<FL4SHK> emeb, regarding picking R and C "so the corner is at or below nyquist of the sample rate", what's the "corner"?


<emeb> the corner frequency of an RC low-pass filter is F = 1/(2piR*C)

<emeb> so pick your R and C values so that F is at about 1/2 the sample
rate.

<emeb> ie - I wanted about a 20kHz corner frequency so I used a 100 ohm R
and a 0.1uF C

<FL4SHK> Is F the highest frequency that'll get passed through?

<agg> bear in mind if you are just using a single RC filter, it rolls off
very slowly, so you might actually want to put the -3dB frequency a lot
lower than half your sample rate

<emeb> Well, a single-pole RC lowpass doesn't roll off fast. That's where
it starts to ramp down at 6dB/oct

<FL4SHK> I don't know what "rolling off" means


<Yehowshua> Well is signal processing, you can delete frequencies - they
are attenuated smoothly
<Yehowshua> **can't
<Yehowshua> **in not is

<emeb> If you plot a curve of attenuation vs frequency - roll off is how it
slopes downward with increasing freq

<emeb> not really. this is pretty fool-proof

F = 20e3 Hz
C = 100e-6 F
R = F * 2 * pi * C = 12.566 Ohms


15:47 <DaKnig> are there 12Ohm resistors
15:47 <FL4SHK> F is 20e3 Hz
15:47 <FL4SHK> doesn't matter
15:47 <FL4SHK> I have a boatload of resistors
15:47 <DaKnig> there's a resistor value ladder
15:47 <FL4SHK> here we're only getting an approximate filter
15:47 <DaKnig> only values on that ladder are widely available
15:48 <FL4SHK> I can probably take a 10 Ohm resistor and two 1 Ohm resistors and put them in series
15:48 <DaKnig> why wont you use a 2nd order filter then
15:48 <FL4SHK> I don't know how to make that
15:48 <DaKnig> if you have two caps
15:48 <FL4SHK> two ears
15:48 <DaKnig> ok do you know laplace transforms
15:48 <FL4SHK> I studied them in college and could pick them up again.
15:48 <DaKnig> dont have to...
15:50 <DaKnig> a linear LTO system just outputs your input times some transfer function in the frequency domain
15:50 <DaKnig> right
15:50 <DaKnig> the laplace domain
15:50 <DaKnig> so convolution in time domain
15:50 <DaKnig> my point is, because 1st order filters are LTO, you can just put a few of em in series
15:50 <DaKnig> or rather, in concatenation (more correct since your data is two wires)
15:51 <DaKnig> (voltage and reference)
15:51 <DaKnig> just connect the output of the first low-pass to the input of the second low-pass and share gnd
15:51 <FL4SHK> that's easy
15:51 <DaKnig> you get much steeper curve
15:51 <DaKnig> 40dB/dec
15:51 <DaKnig> iirc this is butterworth filter
15:52 <DaKnig> put many of this stuff in concatenation, get more steeper curves
15:53 <FL4SHK> I'll need to study filters in general
15:53 <DaKnig> https://en.wikipedia.org/wiki/Butterworth_filter#Filter_implementation_and_design
15:54 <DaKnig> there are different "topologies", ways to implement those filters.
15:55 <DaKnig> I think with cap+res you have Cauer topology
